name: Build Godot Game

on:
  push:
    branches: [main]
  release:
    types: [published]

# To allow releases
permissions:
  contents: write

env:
  GODOT_VERSION: 4.4.1
  PLOUF_VERSION: 3

jobs:
  export:
    name: Export All Platforms
    runs-on: ubuntu-latest

    container:
      image: barichello/godot-ci:4.4.1

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Export Web
        run: |
          mkdir -p builds/web
          godot --headless --verbose --export-release "Web" builds/web/index.html
          cd builds/web
          zip -r ../web-v${PLOUF_VERSION}.zip .
          cd ../..
          rm -fr builds/web/

      - name: Export Windows
        run: |
          mkdir -p builds/win
          godot --headless --export-release "Windows Desktop" builds/win/Plouf-v${PLOUF_VERSION}.exe
          cd builds
          zip -r une-semaine-en-tant-que-monsieur-plouf-windows-v${PLOUF_VERSION}.zip win
          rm -fr win/

      - name: Export Linux
        run: |
          mkdir -p builds/linux
          godot --headless --export-release "Linux" builds/linux/plouf_v${PLOUF_VERSION}.x86_64
          cd builds
          tar cfz une-semaine-en-tant-que-monsieur-plouf-linux-v${PLOUF_VERSION}.tar.gz linux/
          rm -fr linux/
          

      # Android
      #- name: Configure Java SDK path for Android export
      #  run: |
      #    echo 'export/android/android_sdk_path = "/usr/lib/jvm/java-17-openjdk-amd64/"' >> ~/.config/godot/editor_settings-4.4.tres

      #- name: Export Android
      #  run: |
      #    mkdir -p builds/android
      #    godot --headless --export-release "Android" builds/android/Plouf-v01.apk

      - name: List build files
        run: ls -R builds/

      - name: Upload all builds as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: game-builds
          path: builds/

      - name: Make buildsList build files
        run: ls -R builds/

      # Upload to itch.io
      - name: Deploy to Itch.io (Windows)
        uses: robpc/itchio-upload-action@v1
        with:
          path: builds/une-semaine-en-tant-que-monsieur-plouf-windows-v${{ env.PLOUF_VERSION }}.zip
          project: naparuba/une-semaine-en-tant-que-monsieur-plouf
          channel: windows
          version: v${{ env.PLOUF_VERSION }}
          api-key: ${{ secrets.ITCHIO_API_KEY }}

      - name: Deploy to Itch.io (Web)
        uses: robpc/itchio-upload-action@v1
        with:
          path: builds/web-v${{ env.PLOUF_VERSION }}.zip
          project: naparuba/une-semaine-en-tant-que-monsieur-plouf
          channel: web
          version: v${{ env.PLOUF_VERSION }}
          api-key: ${{ secrets.ITCHIO_API_KEY }}


      - name: Deploy to Itch.io (Linux)
        uses: robpc/itchio-upload-action@v1
        with:
          path: builds/une-semaine-en-tant-que-monsieur-plouf-linux-v${{ env.PLOUF_VERSION }}.tar.gz
          project: naparuba/une-semaine-en-tant-que-monsieur-plouf
          channel: linux
          version: v${{ env.PLOUF_VERSION }}
          api-key: ${{ secrets.ITCHIO_API_KEY }}


      - name: Upload to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: builds/**/*.*
